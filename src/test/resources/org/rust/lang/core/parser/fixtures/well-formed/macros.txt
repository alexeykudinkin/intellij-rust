FILE
  RustFileModItemImpl(FILE_MOD_ITEM)
    RustItemMacroImpl(ITEM_MACRO)
      RustMacroInvocationImpl(MACRO_INVOCATION)
        PsiElement(<IDENTIFIER>)('macro_rules')
        PsiElement(!)('!')
      PsiWhiteSpace(' ')
      PsiElement(<IDENTIFIER>)('vec')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n    ')
      RustTokenTreeImpl(TOKEN_TREE)
        PsiElement(()('(')
        PsiWhiteSpace(' ')
        RustTokenTreeImpl(TOKEN_TREE)
          PsiElement($)('$')
        RustTokenTreeImpl(TOKEN_TREE)
          PsiElement(()('(')
          PsiWhiteSpace(' ')
          RustTokenTreeImpl(TOKEN_TREE)
            PsiElement($)('$')
            PsiElement(<IDENTIFIER>)('x')
            PsiElement(:)(':')
            PsiElement(<IDENTIFIER>)('expr')
          PsiWhiteSpace(' ')
          PsiElement())(')')
        RustTokenTreeImpl(TOKEN_TREE)
          PsiElement(,)(',')
          PsiElement(*)('*')
        PsiWhiteSpace(' ')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      RustTokenTreeImpl(TOKEN_TREE)
        PsiElement(=>)('=>')
      PsiWhiteSpace(' ')
      RustTokenTreeImpl(TOKEN_TREE)
        PsiElement({)('{')
        PsiWhiteSpace('\n        ')
        RustTokenTreeImpl(TOKEN_TREE)
          PsiElement({)('{')
          PsiWhiteSpace('\n            ')
          RustTokenTreeImpl(TOKEN_TREE)
            PsiElement(let)('let')
            PsiWhiteSpace(' ')
            PsiElement(mut)('mut')
            PsiWhiteSpace(' ')
            PsiElement(<IDENTIFIER>)('temp_vec')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            PsiElement(<IDENTIFIER>)('Vec')
            PsiElement(::)('::')
            PsiElement(<IDENTIFIER>)('new')
          RustTokenTreeImpl(TOKEN_TREE)
            PsiElement(()('(')
            PsiElement())(')')
          RustTokenTreeImpl(TOKEN_TREE)
            PsiElement(;)(';')
            PsiWhiteSpace('\n            ')
            PsiElement($)('$')
          RustTokenTreeImpl(TOKEN_TREE)
            PsiElement(()('(')
            PsiWhiteSpace('\n                ')
            RustTokenTreeImpl(TOKEN_TREE)
              PsiElement(<IDENTIFIER>)('temp_vec')
              PsiElement(.)('.')
              PsiElement(<IDENTIFIER>)('push')
            RustTokenTreeImpl(TOKEN_TREE)
              PsiElement(()('(')
              RustTokenTreeImpl(TOKEN_TREE)
                PsiElement($)('$')
                PsiElement(<IDENTIFIER>)('x')
              PsiElement())(')')
            RustTokenTreeImpl(TOKEN_TREE)
              PsiElement(;)(';')
            PsiWhiteSpace('\n            ')
            PsiElement())(')')
          RustTokenTreeImpl(TOKEN_TREE)
            PsiElement(*)('*')
            PsiWhiteSpace('\n            ')
            PsiElement(<IDENTIFIER>)('temp_vec')
          PsiWhiteSpace('\n        ')
          PsiElement(})('}')
        PsiWhiteSpace('\n    ')
        PsiElement(})('}')
      RustTokenTreeImpl(TOKEN_TREE)
        PsiElement(;)(';')
      PsiWhiteSpace('\n')
      PsiElement(})('}')
    PsiWhiteSpace('\n\n')
    RustItemMacroImpl(ITEM_MACRO)
      RustMacroInvocationImpl(MACRO_INVOCATION)
        PsiElement(<IDENTIFIER>)('thread_local')
        PsiElement(!)('!')
      PsiElement(()('(')
      RustTokenTreeImpl(TOKEN_TREE)
        PsiElement(static)('static')
        PsiWhiteSpace(' ')
        PsiElement(<IDENTIFIER>)('HANDLE')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(<IDENTIFIER>)('Handle')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(<IDENTIFIER>)('Handle')
      RustTokenTreeImpl(TOKEN_TREE)
        PsiElement(()('(')
        RustTokenTreeImpl(TOKEN_TREE)
          RustNumericLiteralImpl(<INTEGER>)('0')
        PsiElement())(')')
      PsiElement())(')')
      PsiElement(;)(';')
    PsiWhiteSpace('\n\n')
    RustFnItemImpl(FN_ITEM)
      PsiElement(fn)('fn')
      PsiWhiteSpace(' ')
      PsiElement(<IDENTIFIER>)('foo')
      RustGenericParamsImpl(GENERIC_PARAMS)
        <empty list>
      RustParametersImpl(PARAMETERS)
        PsiElement(()('(')
        PsiElement())(')')
      PsiWhiteSpace(' ')
      RustBlockImpl(BLOCK)
        PsiElement({)('{')
        PsiWhiteSpace('\n    ')
        RustExprStmtImpl(EXPR_STMT)
          RustMacroExprImpl(MACRO_EXPR)
            RustMacroInvocationImpl(MACRO_INVOCATION)
              PsiElement(<IDENTIFIER>)('println')
              PsiElement(!)('!')
            PsiElement(()('(')
            RustFormatMacroArgsImpl(FORMAT_MACRO_ARGS)
              RustLitExprImpl(LIT_EXPR)
                RustStringLiteralImpl(<STRING>)('"{}"')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              RustLitExprImpl(LIT_EXPR)
                RustNumericLiteralImpl(<INTEGER>)('92')
            PsiElement())(')')
          PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        RustDeclStmtImpl(DECL_STMT)
          RustLetDeclImpl(LET_DECL)
            PsiElement(let)('let')
            PsiWhiteSpace(' ')
            RustPatBindingImpl(PAT_BINDING)
              PsiElement(<IDENTIFIER>)('v1')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            RustMacroExprImpl(MACRO_EXPR)
              RustMacroInvocationImpl(MACRO_INVOCATION)
                PsiElement(<IDENTIFIER>)('vec')
                PsiElement(!)('!')
              RustMacroArgImpl(MACRO_ARG)
                PsiElement([)('[')
                RustTokenTreeImpl(TOKEN_TREE)
                  RustNumericLiteralImpl(<INTEGER>)('1')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  RustNumericLiteralImpl(<INTEGER>)('2')
                  PsiElement(,)(',')
                  PsiWhiteSpace(' ')
                  RustNumericLiteralImpl(<INTEGER>)('3')
                PsiElement(])(']')
            PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        RustDeclStmtImpl(DECL_STMT)
          RustLetDeclImpl(LET_DECL)
            PsiElement(let)('let')
            PsiWhiteSpace(' ')
            RustPatBindingImpl(PAT_BINDING)
              PsiElement(<IDENTIFIER>)('v2')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            RustMacroExprImpl(MACRO_EXPR)
              RustMacroInvocationImpl(MACRO_INVOCATION)
                PsiElement(<IDENTIFIER>)('vec')
                PsiElement(!)('!')
              RustMacroArgImpl(MACRO_ARG)
                PsiElement([)('[')
                RustTokenTreeImpl(TOKEN_TREE)
                  RustNumericLiteralImpl(<INTEGER>)('1')
                  PsiElement(;)(';')
                  PsiWhiteSpace(' ')
                  RustNumericLiteralImpl(<INTEGER>)('10')
                PsiElement(])(']')
            PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        RustExprStmtImpl(EXPR_STMT)
          RustMacroExprImpl(MACRO_EXPR)
            RustMacroInvocationImpl(MACRO_INVOCATION)
              PsiElement(<IDENTIFIER>)('try')
              PsiElement(!)('!')
            PsiElement(()('(')
            RustCallExprImpl(CALL_EXPR)
              RustPathExprImpl(PATH_EXPR)
                RustPathPartImpl(PATH_PART)
                  PsiElement(<IDENTIFIER>)('bar')
              RustArgListImpl(ARG_LIST)
                PsiElement(()('(')
                PsiElement())(')')
            PsiElement())(')')
          PsiElement(;)(';')
        PsiWhiteSpace('\n    ')
        RustExprStmtImpl(EXPR_STMT)
          RustMacroExprImpl(MACRO_EXPR)
            RustMacroInvocationImpl(MACRO_INVOCATION)
              PsiElement(<IDENTIFIER>)('format')
              PsiElement(!)('!')
            PsiElement(()('(')
            RustFormatMacroArgsImpl(FORMAT_MACRO_ARGS)
              RustLitExprImpl(LIT_EXPR)
                RustStringLiteralImpl(<STRING>)('"{argument}"')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              PsiElement(<IDENTIFIER>)('argument')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              RustLitExprImpl(LIT_EXPR)
                RustStringLiteralImpl(<STRING>)('"test"')
            PsiElement())(')')
          PsiElement(;)(';')
        PsiWhiteSpace('   ')
        PsiComment(<EOL_COMMENT>)('// => "test"')
        PsiWhiteSpace('\n    ')
        RustExprStmtImpl(EXPR_STMT)
          RustMacroExprImpl(MACRO_EXPR)
            RustMacroInvocationImpl(MACRO_INVOCATION)
              PsiElement(<IDENTIFIER>)('format_args')
              PsiElement(!)('!')
            PsiElement(()('(')
            RustFormatMacroArgsImpl(FORMAT_MACRO_ARGS)
              RustLitExprImpl(LIT_EXPR)
                RustStringLiteralImpl(<STRING>)('"{name} {}"')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              RustLitExprImpl(LIT_EXPR)
                RustNumericLiteralImpl(<INTEGER>)('1')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              PsiElement(<IDENTIFIER>)('name')
              PsiWhiteSpace(' ')
              PsiElement(=)('=')
              PsiWhiteSpace(' ')
              RustLitExprImpl(LIT_EXPR)
                RustNumericLiteralImpl(<INTEGER>)('2')
            PsiElement())(')')
          PsiElement(;)(';')
        PsiWhiteSpace('        ')
        PsiComment(<EOL_COMMENT>)('// => "2 1"')
        PsiWhiteSpace('\n    ')
        RustExprStmtImpl(EXPR_STMT)
          RustMacroExprImpl(MACRO_EXPR)
            RustMacroInvocationImpl(MACRO_INVOCATION)
              PsiElement(<IDENTIFIER>)('debug')
              PsiElement(!)('!')
            PsiElement(()('(')
            RustFormatMacroArgsImpl(FORMAT_MACRO_ARGS)
              RustLitExprImpl(LIT_EXPR)
                RustStringLiteralImpl(<STRING>)('"{a} {c} {b}"')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              PsiElement(<IDENTIFIER>)('a')
              PsiElement(=)('=')
              RustLitExprImpl(LIT_EXPR)
                RustStringLiteralImpl(<STRING>)('"a"')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              PsiElement(<IDENTIFIER>)('b')
              PsiElement(=)('=')
              RustLitExprImpl(LIT_EXPR)
                RustStringLiteralImpl(<CHAR>)(''b'')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              PsiElement(<IDENTIFIER>)('c')
              PsiElement(=)('=')
              RustLitExprImpl(LIT_EXPR)
                RustNumericLiteralImpl(<INTEGER>)('3')
            PsiElement())(')')
          PsiElement(;)(';')
        PsiWhiteSpace('  ')
        PsiComment(<EOL_COMMENT>)('// => "a 3 b"')
        PsiWhiteSpace('\n')
        PsiElement(})('}')
